'''
동적 계획법이란
어떤 문제가 여러 단계의 반복되는 부분 문제로 이루어질때, 각 단계에 있는 부분 문제의 답을 기반으로 전체 문제의 답을
구하는 방법이다.

Bottom up 방식의 문제이다.
동적 계획법에서는 그 이전 단계에 있는 문제들의 답에 의존한다.
동적 계획법은 테이블 등에 저장해서 값을 가져다 쓴다.

작동 방법
1. 문제를 부분 문제로 나눈다.
2. 가장 작은 부분 문제부터 해를 구한 뒤 테이블에 저장한다.
3. 테이블에 저장되어 씨는 문제의 해를 이용하여 점차적으로 상위 부분 문제의 최적해를 구한다.

하지만 동적 계획법을 이용하기 위해서 최적 부분 구조를 갖추고 있다는 전제가 필요하다. 최적 부분 구조란,
전체 문제의 최적해가 부분 문제의 최적해로 부터 만들어지는 구조를 말합니다.
5개의 부분 문제로 나눌 수 있는 문제가 있다면 5개의 해를 구해 문제를 풀 수 있다면 동적 계획법으로 풀수 있다.

피보나치 수열
Fn = 0 (n == 0)
Fn = 1 (n == 1)
Fn = Fn-1 + Fn-2 n > 1
'''

num = int(input())
matrix = [0 for i in range(num+1)]
'''
matrix = []
for i in range(num+1):
    matrix.append(0)
'''
matrix[1] = 1

for i in range(2,num+1):
    matrix[i] = matrix[i-1] + matrix[i-2]
print(matrix[num])